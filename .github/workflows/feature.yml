name: CI Pipeline

on:
  push:
    branches:
      - master

env:
  MAVEN_OPTS: "-DskipTests=true"

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      # Step 3: Cache Maven Dependencies
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      # Step 4: Build with Maven
      - name: Build with Maven
        run: mvn clean install

      # Step 5: Upload Build Artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: target/*.jar

      # Step 6: SonarCloud Scan
      - name: SonarCloud Scan
        run: mvn sonar:sonar -Dsonar.projectKey=hananali0311_DevSecops_Pipeline -Dsonar.organization=hananali0311 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # Step 7: Run Tests
      - name: Run Tests
        run: mvn test

      # Step 8: Upload Artifact to JFrog via Identity Token
      - name: Upload Artifact to JFrog via Identity Token
        run: |
          curl -H "Authorization: Bearer ${{ secrets.JFROG_IDENTITY_TOKEN }}" \
          -T target/*.jar \
          "https://hananali0311.jfrog.io/artifactory/my-repo--libs-release-local/my-java-app/"

      # Step 9: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 10: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.io
          ecr: false  # Explicitly set ecr to false to remove the ecr behavior

      # Step 11: Build Docker image
      - name: Build Docker image
        run: |
          docker --version  # Check Docker version
          docker build -t hananali0311/spring-petclinic:latest .





# ### adding the pipeline .. till jfrog.........

# name: CI Pipeline

# on:
#   push:
#     branches:
#       - master 

# env:
#   MAVEN_OPTS: "-DskipTests=true" 

# jobs:
#   ci:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'adopt'
#           cache: maven

#       - name: Cache Maven Dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.m2/repository
#           key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

#       - name: Build with Maven
#         run: mvn clean install

#       - name: Upload Build Artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: jar
#           path: target/*.jar

#       - name: SonarCloud Scan
#         run: mvn sonar:sonar -Dsonar.projectKey=hananali0311_DevSecops_Pipeline -Dsonar.organization=hananali0311 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

#       - name: Run Tests
#         run: mvn test
# code added


# name: CI Pipeline

# on:
#   push:
#     branches:
#       - master 
      
# env:
#   DOCKER_IMAGE: ankit1111/petapp:${{ github.sha }}
#   MAVEN_OPTS: "-DskipTests=true"      

# jobs:
#   build:
#     uses: ./.github/workflows/javabuild.yml
#     secrets: inherit

#   sonar:
#     uses: ./.github/workflows/sonar.yml
#     needs: build
#     secrets: inherit

#   test:
#     uses: ./.github/workflows/test.yml
#     needs: sonar
#     secrets: inherit




# ## adding the pipeline 


# # name: CI Pipeline
# # on:
# #   push:
# #     branches:
# #       - master 
      
# # env:
# #         DOCKER_IMAGE: ankit1111/petapp:${{ github.sha }}
# #         MAVEN_OPTS: "-DskipTests=true"      

# # jobs:
# #   build:
# #     uses: ./.github/workflows/javabuild.yml
# #     secrets: inherit
# #   sonar:
# #      uses: ./.github/workflows/sonar.yml
# #      needs: build
# #      secrets: inherit     

#   # test:
#   #   uses: ./.github/workflows/test.yml
#   #   needs: sonar
#   #   secrets: inherit  

# #   imagepush:
# #     uses: ./.github/workflows/imagepush.yml
# #     needs: test
# #     secrets: inherit  
